// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EnableCustomFieldsOption renders a checked checkbox and a confirmation message when toggled on 1`] = `
.emotion-2 {
  font-family: -apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,Oxygen-Sans,Ubuntu,Cantarell,'Helvetica Neue',sans-serif;
  font-size: 13px;
}

.emotion-0 {
  margin-bottom: 8px;
}

.components-panel__row .emotion-0 {
  margin-bottom: inherit;
}

.emotion-4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 13px;
  margin: 0;
  border: 0;
  cursor: pointer;
  -webkit-appearance: none;
  background: none;
  -webkit-transition: box-shadow 0.1s linear;
  transition: box-shadow 0.1s linear;
  height: 36px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  padding: 6px 12px;
  border-radius: 2px;
  color: #1e1e1e;
  box-shadow: inset 0 0 0 1px var( --wp-admin-theme-color );
  outline: 1px solid transparent;
  white-space: nowrap;
  color: var( --wp-admin-theme-color );
  background: transparent;
}

@media ( prefers-reduced-motion:reduce ) {
  .emotion-4 {
    -webkit-transition-duration: 0ms;
    transition-duration: 0ms;
  }
}

.emotion-4[aria-expanded='true'],
.emotion-4:hover {
  color: var( --wp-admin-theme-color );
}

.emotion-4[aria-disabled='true']:hover {
  color: initial;
}

.emotion-4:focus:not(:disabled ) {
  box-shadow: 0 0 0 1.5px var( --wp-admin-theme-color );
  outline: 1px solid transparent;
}

.emotion-4:not([aria-disabled="true"]):active {
  color: inherit;
}

.emotion-4:disabled,
.emotion-4[aria-disabled="true"] {
  cursor: default;
  opacity: 0.3;
}

.emotion-4 svg {
  fill: currentColor;
  outline: none;
}

.emotion-4 .components-visually-hidden {
  height: auto;
}

.emotion-4:active:not(:disabled ) {
  background: #e0e0e0;
  color: var( --wp-admin-theme-color-darker-10 );
  box-shadow: none;
}

.emotion-4:hover:not(:disabled ) {
  color: var( --wp-admin-theme-color-darker-10 );
  box-shadow: inset 0 0 0 1px var( --wp-admin-theme-color-darker-10 );
}

.emotion-4:disabled,
.emotion-4[aria-disabled='true'],
.emotion-4[aria-disabled='true']:hover {
  color: #828282;
  background: #eaeaea;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
  opacity: 1;
  box-shadow: none;
}

<div
  className="edit-post-preferences-modal__option"
>
  <div
    className="components-base-control emotion-2 emotion-3"
  >
    <div
      className="components-base-control__field emotion-0 emotion-1"
    >
      <span
        className="components-checkbox-control__input-container"
      >
        <input
          checked={true}
          className="components-checkbox-control__input"
          id="inspector-checkbox-control-3"
          onChange={[Function]}
          type="checkbox"
          value="1"
        />
        <svg
          aria-hidden={true}
          className="components-checkbox-control__checked"
          focusable={false}
          height={24}
          role="img"
          viewBox="0 0 24 24"
          width={24}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M18.3 5.6L9.9 16.9l-4.6-3.4-.9 1.2 5.8 4.3 9.3-12.6z"
          />
        </svg>
      </span>
      <label
        className="components-checkbox-control__label"
        htmlFor="inspector-checkbox-control-3"
      />
    </div>
  </div>
  <p
    className="edit-post-preferences-modal__custom-fields-confirmation-message"
  >
    A page reload is required for this change. Make sure your content is saved before reloading.
  </p>
  <button
    className="components-button edit-post-preferences-modal__custom-fields-confirmation-button is-secondary emotion-4 emotion-5"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Enable & Reload
  </button>
</div>
`;

exports[`EnableCustomFieldsOption renders a checked checkbox when custom fields are enabled 1`] = `
.emotion-2 {
  font-family: -apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,Oxygen-Sans,Ubuntu,Cantarell,'Helvetica Neue',sans-serif;
  font-size: 13px;
}

.emotion-0 {
  margin-bottom: 8px;
}

.components-panel__row .emotion-0 {
  margin-bottom: inherit;
}

<div
  className="edit-post-preferences-modal__option"
>
  <div
    className="components-base-control emotion-2 emotion-3"
  >
    <div
      className="components-base-control__field emotion-0 emotion-1"
    >
      <span
        className="components-checkbox-control__input-container"
      >
        <input
          checked={true}
          className="components-checkbox-control__input"
          id="inspector-checkbox-control-0"
          onChange={[Function]}
          type="checkbox"
          value="1"
        />
        <svg
          aria-hidden={true}
          className="components-checkbox-control__checked"
          focusable={false}
          height={24}
          role="img"
          viewBox="0 0 24 24"
          width={24}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M18.3 5.6L9.9 16.9l-4.6-3.4-.9 1.2 5.8 4.3 9.3-12.6z"
          />
        </svg>
      </span>
      <label
        className="components-checkbox-control__label"
        htmlFor="inspector-checkbox-control-0"
      />
    </div>
  </div>
</div>
`;

exports[`EnableCustomFieldsOption renders an unchecked checkbox and a confirmation message when toggled off 1`] = `
.emotion-2 {
  font-family: -apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,Oxygen-Sans,Ubuntu,Cantarell,'Helvetica Neue',sans-serif;
  font-size: 13px;
}

.emotion-0 {
  margin-bottom: 8px;
}

.components-panel__row .emotion-0 {
  margin-bottom: inherit;
}

.emotion-4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 13px;
  margin: 0;
  border: 0;
  cursor: pointer;
  -webkit-appearance: none;
  background: none;
  -webkit-transition: box-shadow 0.1s linear;
  transition: box-shadow 0.1s linear;
  height: 36px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  padding: 6px 12px;
  border-radius: 2px;
  color: #1e1e1e;
  box-shadow: inset 0 0 0 1px var( --wp-admin-theme-color );
  outline: 1px solid transparent;
  white-space: nowrap;
  color: var( --wp-admin-theme-color );
  background: transparent;
}

@media ( prefers-reduced-motion:reduce ) {
  .emotion-4 {
    -webkit-transition-duration: 0ms;
    transition-duration: 0ms;
  }
}

.emotion-4[aria-expanded='true'],
.emotion-4:hover {
  color: var( --wp-admin-theme-color );
}

.emotion-4[aria-disabled='true']:hover {
  color: initial;
}

.emotion-4:focus:not(:disabled ) {
  box-shadow: 0 0 0 1.5px var( --wp-admin-theme-color );
  outline: 1px solid transparent;
}

.emotion-4:not([aria-disabled="true"]):active {
  color: inherit;
}

.emotion-4:disabled,
.emotion-4[aria-disabled="true"] {
  cursor: default;
  opacity: 0.3;
}

.emotion-4 svg {
  fill: currentColor;
  outline: none;
}

.emotion-4 .components-visually-hidden {
  height: auto;
}

.emotion-4:active:not(:disabled ) {
  background: #e0e0e0;
  color: var( --wp-admin-theme-color-darker-10 );
  box-shadow: none;
}

.emotion-4:hover:not(:disabled ) {
  color: var( --wp-admin-theme-color-darker-10 );
  box-shadow: inset 0 0 0 1px var( --wp-admin-theme-color-darker-10 );
}

.emotion-4:disabled,
.emotion-4[aria-disabled='true'],
.emotion-4[aria-disabled='true']:hover {
  color: #828282;
  background: #eaeaea;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
  opacity: 1;
  box-shadow: none;
}

<div
  className="edit-post-preferences-modal__option"
>
  <div
    className="components-base-control emotion-2 emotion-3"
  >
    <div
      className="components-base-control__field emotion-0 emotion-1"
    >
      <span
        className="components-checkbox-control__input-container"
      >
        <input
          checked={false}
          className="components-checkbox-control__input"
          id="inspector-checkbox-control-2"
          onChange={[Function]}
          type="checkbox"
          value="1"
        />
      </span>
      <label
        className="components-checkbox-control__label"
        htmlFor="inspector-checkbox-control-2"
      />
    </div>
  </div>
  <p
    className="edit-post-preferences-modal__custom-fields-confirmation-message"
  >
    A page reload is required for this change. Make sure your content is saved before reloading.
  </p>
  <button
    className="components-button edit-post-preferences-modal__custom-fields-confirmation-button is-secondary emotion-4 emotion-5"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Disable & Reload
  </button>
</div>
`;

exports[`EnableCustomFieldsOption renders an unchecked checkbox when custom fields are disabled 1`] = `
.emotion-2 {
  font-family: -apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,Oxygen-Sans,Ubuntu,Cantarell,'Helvetica Neue',sans-serif;
  font-size: 13px;
}

.emotion-0 {
  margin-bottom: 8px;
}

.components-panel__row .emotion-0 {
  margin-bottom: inherit;
}

<div
  className="edit-post-preferences-modal__option"
>
  <div
    className="components-base-control emotion-2 emotion-3"
  >
    <div
      className="components-base-control__field emotion-0 emotion-1"
    >
      <span
        className="components-checkbox-control__input-container"
      >
        <input
          checked={false}
          className="components-checkbox-control__input"
          id="inspector-checkbox-control-1"
          onChange={[Function]}
          type="checkbox"
          value="1"
        />
      </span>
      <label
        className="components-checkbox-control__label"
        htmlFor="inspector-checkbox-control-1"
      />
    </div>
  </div>
</div>
`;
